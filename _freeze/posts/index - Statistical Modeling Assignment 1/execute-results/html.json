{
  "hash": "8e64ce11672f985fd52d194d1276502e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Statistical Modeling Assignment 1\ndate: 2025.04.04\nauthor: Jackson Calhoun\n---\n\n\n\n## Problem 1\na.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  filter(n > 40, n <84) |> \n  select(-prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 151,461 × 4\n    year sex   name         n\n   <dbl> <chr> <chr>    <int>\n 1  1880 F     Harriett    83\n 2  1880 F     Mable       83\n 3  1880 F     Myra        83\n 4  1880 F     Sophie      83\n 5  1880 F     Tillie      83\n 6  1880 F     Isabel      81\n 7  1880 F     Sylvia      81\n 8  1880 F     Carolyn     80\n 9  1880 F     Isabelle    80\n10  1880 F     Leila       80\n# ℹ 151,451 more rows\n```\n\n\n:::\n:::\n\n\n\nb. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  filter(nchar(name) == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 546,519 × 5\n    year sex   name       n    prop\n   <dbl> <chr> <chr>  <int>   <dbl>\n 1  1880 F     Minnie  1746 0.0179 \n 2  1880 F     Bertha  1320 0.0135 \n 3  1880 F     Martha  1040 0.0107 \n 4  1880 F     Nellie   995 0.0102 \n 5  1880 F     Carrie   949 0.00972\n 6  1880 F     Bessie   796 0.00816\n 7  1880 F     Jennie   793 0.00812\n 8  1880 F     Hattie   769 0.00788\n 9  1880 F     Mattie   704 0.00721\n10  1880 F     Lillie   647 0.00663\n# ℹ 546,509 more rows\n```\n\n\n:::\n:::\n\n\n\nc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  mutate(total = n/prop) |> \n  filter(year == 1989)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 23,773 × 6\n    year sex   name          n   prop    total\n   <dbl> <chr> <chr>     <int>  <dbl>    <dbl>\n 1  1989 F     Jessica   47885 0.0240 1991890.\n 2  1989 F     Ashley    47587 0.0239 1991890.\n 3  1989 F     Brittany  37788 0.0190 1991890.\n 4  1989 F     Amanda    36828 0.0185 1991890.\n 5  1989 F     Sarah     27792 0.0140 1991890.\n 6  1989 F     Samantha  24791 0.0124 1991890.\n 7  1989 F     Jennifer  23995 0.0120 1991890.\n 8  1989 F     Stephanie 22767 0.0114 1991890.\n 9  1989 F     Lauren    21061 0.0106 1991889.\n10  1989 F     Elizabeth 20296 0.0102 1991890.\n# ℹ 23,763 more rows\n```\n\n\n:::\n:::\n\n\n\nd.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |>\n  summarize(total = sum(n), .by = year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 138 × 2\n    year  total\n   <dbl>  <int>\n 1  1880 201484\n 2  1881 192696\n 3  1882 221533\n 4  1883 216946\n 5  1884 243462\n 6  1885 240854\n 7  1886 255317\n 8  1887 247394\n 9  1888 299473\n10  1889 288946\n# ℹ 128 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Problem 2\n\na. filter not select\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  filter(n >100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 230,074 × 5\n    year sex   name          n   prop\n   <dbl> <chr> <chr>     <int>  <dbl>\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 230,064 more rows\n```\n\n\n:::\n:::\n\n\n\n\nb. Nothing. Maybe don't put a space after the - though...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |>\n  select(-year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 × 4\n   sex   name          n   prop\n   <chr> <chr>     <int>  <dbl>\n 1 F     Mary       7065 0.0724\n 2 F     Anna       2604 0.0267\n 3 F     Emma       2003 0.0205\n 4 F     Elizabeth  1939 0.0199\n 5 F     Minnie     1746 0.0179\n 6 F     Margaret   1578 0.0162\n 7 F     Ida        1472 0.0151\n 8 F     Alice      1414 0.0145\n 9 F     Bertha     1320 0.0135\n10 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\n\nc. too many =\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  mutate(name_length = nchar(name))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 × 6\n    year sex   name          n   prop name_length\n   <dbl> <chr> <chr>     <int>  <dbl>       <int>\n 1  1880 F     Mary       7065 0.0724           4\n 2  1880 F     Anna       2604 0.0267           4\n 3  1880 F     Emma       2003 0.0205           4\n 4  1880 F     Elizabeth  1939 0.0199           9\n 5  1880 F     Minnie     1746 0.0179           6\n 6  1880 F     Margaret   1578 0.0162           8\n 7  1880 F     Ida        1472 0.0151           3\n 8  1880 F     Alice      1414 0.0145           5\n 9  1880 F     Bertha     1320 0.0135           6\n10  1880 F     Sarah      1288 0.0132           5\n# ℹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\n\nd. add filter, \"M\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  filter(sex == \"M\") |> \n  select(-prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 786,372 × 4\n    year sex   name        n\n   <dbl> <chr> <chr>   <int>\n 1  1880 M     John     9655\n 2  1880 M     William  9532\n 3  1880 M     James    5927\n 4  1880 M     Charles  5348\n 5  1880 M     George   5126\n 6  1880 M     Frank    3242\n 7  1880 M     Joseph   2632\n 8  1880 M     Thomas   2534\n 9  1880 M     Henry    2444\n10  1880 M     Robert   2415\n# ℹ 786,362 more rows\n```\n\n\n:::\n:::\n\n\n\n\ne. year unduly repeated\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  select(year, sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,924,665 × 2\n    year sex  \n   <dbl> <chr>\n 1  1880 F    \n 2  1880 F    \n 3  1880 F    \n 4  1880 F    \n 5  1880 F    \n 6  1880 F    \n 7  1880 F    \n 8  1880 F    \n 9  1880 F    \n10  1880 F    \n# ℹ 1,924,655 more rows\n```\n\n\n:::\n:::\n\n\n\n\nf. Nothing. Though it is overly repetative.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  group_by(n) |> \n  summarize(ave = mean(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13,691 × 2\n       n   ave\n   <int> <dbl>\n 1     5     5\n 2     6     6\n 3     7     7\n 4     8     8\n 5     9     9\n 6    10    10\n 7    11    11\n 8    12    12\n 9    13    13\n10    14    14\n# ℹ 13,681 more rows\n```\n\n\n:::\n:::\n\n\n\n\ng. Nothing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames |> \n  group_by(n > 100) |> \n  summarize(total = sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  `n > 100`     total\n  <lgl>         <int>\n1 FALSE      29777817\n2 TRUE      318342700\n```\n\n\n:::\n:::\n\n\n\n\n## Problem 3\nThe problem was that summarize only returns the group by value and the summarized value, so once summarize was used, there was no am in the dataframe. adding am to the group_by() allows us to filter for it later.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.4     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nmtcars |>\n  group_by(cyl, am) |>\n  summarize(avg_mpg = mean(mpg)) |>\n  filter(am == 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'cyl'. You can override using the `.groups`\nargument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n# Groups:   cyl [3]\n    cyl    am avg_mpg\n  <dbl> <dbl>   <dbl>\n1     4     1    28.1\n2     6     1    20.6\n3     8     1    15.4\n```\n\n\n:::\n:::\n\n\n\n## Problem 5\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |>\n  group_by(cyl) |>\n  summarize(\n    N = n(),\n    avg_mpg = mean(mpg)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n    cyl     N avg_mpg\n  <dbl> <int>   <dbl>\n1     4    11    26.7\n2     6     7    19.7\n3     8    14    15.1\n```\n\n\n:::\n:::\n\n\n\nN is the number of cars with the corresponding number of cylinders.\n\n## Problem 6\n\na. summarize\nb. mutate\nc. arrange\nd. filter\ne. select\n\n## Problem 12\n\nI'm unable to load nycflights13\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Suplementary excersizes\n\n 1. arrange()\n 2. group_by()\n 3. select()\n 4. filter()\n 5. summarize()\n 6. mutate()\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}